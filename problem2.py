'''
Created on 2013-10-24

@author: oilbeater
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
import timeit
def fib1():
    a,b = 0,1
    while a < 4000000:
        yield a
        a,b = b,a + b

result = sum((i for i in fib1() if i % 2 == 0))
print str(result)

def fib2():
    a,b = 0,1
    while a < 4000000:
        yield a
        a, b = b, a + b
        a, b = b, a + b
        a, b = b, a + b

result = sum((i for i in fib2()))
print str(result)

def fib3():
    a,b = 2,8
    while a < 4000000:
        yield a
        a, b = b, 4 * b + a

result = sum((i for i in fib3()))
print str(result)

print timeit.timeit('sum((i for i in fib1()))',"from __main__ import fib1", number = 100000)
print timeit.timeit('sum((i for i in fib2()))',"from __main__ import fib2", number = 100000)
print timeit.timeit('sum((i for i in fib3()))',"from __main__ import fib3", number = 100000)